# docker compose -f compose.DEV.yaml up -d
# docker compose -f compose.DEV.yaml down
# docker compose -f compose.DEV.yaml logs
name: ak-services
services:
  web:
    build:
      context: ./
      dockerfile: ./Dockerfile
      target: development
    ports:
      - "8080:8080"
    environment:
      - DATABASE_USER=web_user
      - DATABASE_DB=akdb
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_PASSWORD_FILE=/run/secrets/web-user-password.txt
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - web-user-password.txt
    volumes:
      - ./:/app  # Mounting to /app so that the 'air' CLI tool hot reload
      - db-data:/var/lib/postgresql/data
    stdin_open: true
    tty: true

  db:
    build:
      context: ./db
      dockerfile: ./Dockerfile
      target: development
    restart: always
    user: postgres
    shm_size: 256mb
    secrets:
      - postgres-password.txt
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=akdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password.txt
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      start_period: 5s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 5

volumes:
  db-data:

secrets:
  postgres-password.txt:
    file: secrets\postgres-password.txt
  web-user-password.txt:
    file: secrets\web-user-password.txt
